package br.com.goinf.entities;
// Generated 13 de jan de 2019 21:10:01 by Hibernate Tools 5.2.11.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Category generated by hbm2java
 */
@Entity
@Table(name = "category", schema = "public")
public class Category implements java.io.Serializable {

	private int id;
	private String name;
	private Set<Subcategory> subcategories = new HashSet<Subcategory>(0);
	private Set<Product> products = new HashSet<Product>(0);

	public Category() {
	}

	public Category(int id) {
		this.id = id;
	}

	public Category(int id, String name, Set<Subcategory> subcategories, Set<Product> products) {
		this.id = id;
		this.name = name;
		this.subcategories = subcategories;
		this.products = products;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "name", length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "category_has_subcategory", schema = "public", joinColumns = {
			@JoinColumn(name = "category_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "subcategory_id", nullable = false, updatable = false) })
	public Set<Subcategory> getSubcategories() {
		return this.subcategories;
	}

	public void setSubcategories(Set<Subcategory> subcategories) {
		this.subcategories = subcategories;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "category")
	public Set<Product> getProducts() {
		return this.products;
	}

	public void setProducts(Set<Product> products) {
		this.products = products;
	}

}
