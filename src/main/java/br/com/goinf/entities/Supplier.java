package br.com.goinf.entities;
// Generated 13 de jan de 2019 21:10:01 by Hibernate Tools 5.2.11.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Supplier generated by hbm2java
 */
@Entity
@Table(name = "supplier", schema = "public")
public class Supplier implements java.io.Serializable {

	private int id;
	private Person person;
	private Suppliertype suppliertype;
	private String site;
	private Set<Address> addresses = new HashSet<Address>(0);
	private Set<Contact> contacts = new HashSet<Contact>(0);
	private Set<Bankdata> bankdatas = new HashSet<Bankdata>(0);

	public Supplier() {
	}

	public Supplier(int id) {
		this.id = id;
	}

	public Supplier(int id, Person person, Suppliertype suppliertype, String site, Set<Address> addresses,
			Set<Contact> contacts, Set<Bankdata> bankdatas) {
		this.id = id;
		this.person = person;
		this.suppliertype = suppliertype;
		this.site = site;
		this.addresses = addresses;
		this.contacts = contacts;
		this.bankdatas = bankdatas;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "person_id")
	public Person getPerson() {
		return this.person;
	}

	public void setPerson(Person person) {
		this.person = person;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "suppliertype_id")
	public Suppliertype getSuppliertype() {
		return this.suppliertype;
	}

	public void setSuppliertype(Suppliertype suppliertype) {
		this.suppliertype = suppliertype;
	}

	@Column(name = "site", length = 100)
	public String getSite() {
		return this.site;
	}

	public void setSite(String site) {
		this.site = site;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "supplier_has_address", schema = "public", joinColumns = {
			@JoinColumn(name = "supplier_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "address_id", nullable = false, updatable = false) })
	public Set<Address> getAddresses() {
		return this.addresses;
	}

	public void setAddresses(Set<Address> addresses) {
		this.addresses = addresses;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "supplier_has_contact", schema = "public", joinColumns = {
			@JoinColumn(name = "supplier_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "contact_id", nullable = false, updatable = false) })
	public Set<Contact> getContacts() {
		return this.contacts;
	}

	public void setContacts(Set<Contact> contacts) {
		this.contacts = contacts;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "supplier_has_bankdata", schema = "public", joinColumns = {
			@JoinColumn(name = "supplier_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "bankdata_id", nullable = false, updatable = false) })
	public Set<Bankdata> getBankdatas() {
		return this.bankdatas;
	}

	public void setBankdatas(Set<Bankdata> bankdatas) {
		this.bankdatas = bankdatas;
	}

}
